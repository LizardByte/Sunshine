---
app-id: dev.lizardbyte.sunshine  # Flathub build is dev.lizardbyte.app.Sunshine
runtime: org.freedesktop.Platform
runtime-version: "22.08"
sdk: org.freedesktop.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Extension.node18
command: sunshine
separate-locales: false
finish-args:
  - --device=all  # access all devices
  - --env=PULSE_PROP_media.category=Manager  # allow sunshine to manage audio sinks
  - --filesystem=home  # need to save files in user's home directory
  - --share=ipc  # required for X11 shared memory extension
  - --share=network  # access network
  - --socket=pulseaudio  # play sounds using pulseaudio
  - --socket=wayland  # show windows using Wayland
  - --socket=x11  # show windows using X11
  - --system-talk-name=org.freedesktop.Avahi  # talk to avahi on the system bus
  - --talk-name=org.freedesktop.Flatpak  # talk to flatpak on the session bus

cleanup:
  - /include
  - /lib/cmake
  - /lib/pkgconfig
  - /lib/*.la
  - /lib/*.a
  - /share/man

modules:
  - shared-modules/libappindicator/libappindicator-gtk3-12.10.json

  - name: boost
    buildsystem: simple
    build-commands:
      - ./bootstrap.sh --prefix=$FLATPAK_DEST --with-libraries=locale,log,program_options,system,thread
      - ./b2 install variant=release link=shared runtime-link=shared -j $FLATPAK_BUILDER_N_JOBS
    sources:
      - type: archive
        url: https://github.com/boostorg/boost/releases/download/boost-1.82.0/boost-1.82.0.tar.xz
        sha256: fd60da30be908eff945735ac7d4d9addc7f7725b1ff6fcdcaede5262d511d21e
        x-checker-data:
          type: anitya
          project-id: 6845
          stable-only: true
          url-template: https://github.com/boostorg/boost/releases/download/boost-$version/boost-$version.tar.xz

  - name: avahi
    cleanup:
      - /bin
      - /lib/avahi
      - /share
    config-opts:
      - --with-distro=none
      - --disable-gobject
      - --disable-introspection
      - --disable-qt3
      - --disable-qt4
      - --disable-qt5
      - --disable-gtk
      - --disable-core-docs
      - --disable-manpages
      - --disable-libdaemon
      - --disable-python
      - --disable-pygobject
      - --disable-mono
      - --disable-monodoc
      - --disable-autoipd
      - --disable-doxygen-doc
      - --disable-doxygen-dot
      - --disable-doxygen-xml
      - --disable-doxygen-html
      - --disable-manpages
      - --disable-xmltoman
      - --disable-libevent
    sources:
      - type: archive
        url: http://avahi.org/download/avahi-0.8.tar.gz
        sha256: 060309d7a333d38d951bc27598c677af1796934dbd98e1024e7ad8de798fedda
        x-checker-data:
          type: anitya
          project-id: 147
          stable-only: true
          url-template: http://avahi.org/download/avahi-$version.tar.gz
      - type: git
        url: https://src.fedoraproject.org/rpms/avahi.git
        commit: e8ad0f7bbb7fdf82a0f0be128bab07b5928322f0
        dest: rpms
      - type: shell
        commands:
          - cat rpms/*.patch | patch -Np1 -d .
          - autoreconf -ivf

  - name: libevdev
    buildsystem: meson
    config-opts:
      - -Ddocumentation=disabled
      - -Dtests=disabled
    cleanup:
      - /bin
    sources:
      - type: archive
        url: https://www.freedesktop.org/software/libevdev/libevdev-1.13.1.tar.xz
        sha256: 06a77bf2ac5c993305882bc1641017f5bec1592d6d1b64787bad492ab34f2f36
        x-checker-data:
          type: anitya
          project-id: 20540
          stable-only: true
          url-template: https://www.freedesktop.org/software/libevdev/libevdev-$version.tar.xz

  - name: numactl
    buildsystem: autotools
    cleanup:
      - /bin
    sources:
      - type: archive
        url: https://github.com/numactl/numactl/archive/refs/tags/v2.0.16.tar.gz
        sha256: a35c3bdb3efab5c65927e0de5703227760b1101f5e27ab741d8f32b3d5f0a44c
        x-checker-data:
          type: anitya
          project-id: 2507
          stable-only: true
          url-template: https://github.com/numactl/numactl/archive/refs/tags/v$version.tar.gz

  - name: intel-mediasdk
    only-arches:
      - x86_64
    buildsystem: cmake-ninja
    config-opts:
      - -DENABLE_OPENCL=ON
      - -DENABLE_X11_DRI3=ON
      - -DENABLE_WAYLAND=ON
      - -DENABLE_ITT=OFF
      - -DENABLE_TEXTLOG=OFF
      - -DENABLE_STAT=OFF
      - -DBUILD_ALL=OFF
      - -DBUILD_RUNTIME=ON
      - -DBUILD_SAMPLES=OFF
      - -DBUILD_TESTS=OFF
      - -DBUILD_TOOLS=OFF
      - -DUSE_SYSTEM_GTEST=OFF
      - -DMFX_ENABLE_KERNELS=ON
    sources:
      - type: archive
        url: https://github.com/Intel-Media-SDK/MediaSDK/archive/refs/tags/intel-mediasdk-23.2.2.tar.gz
        sha256: 12f23a78104edc1c9bfa755effd2723866d107ad752f72d3839fcc8db0503cec
        x-checker-data:
          type: anitya
          project-id: 21814
          stable-only: true
          url-template: https://github.com/Intel-Media-SDK/MediaSDK/archive/refs/tags/intel-mediasdk-$version.tar.gz
    modules:
      - name: libdrm
        buildsystem: meson
        sources:
        - type: archive
          url: https://gitlab.freedesktop.org/mesa/drm/-/archive/libdrm-2.4.115/drm-libdrm-2.4.115.tar.gz
          sha256: fd8b7c6e4e40d13c32ab67ace2cb6c71e08c9ca53124ff33ccadd74f604117e3
          x-checker-data:
            type: anitya
            project-id: 1596
            stable-only: true
            url-template: https://gitlab.freedesktop.org/mesa/drm/-/archive/libdrm-$version/drm-libdrm-$version.tar.gz

  # Caching is configured until here, not including CUDA
  - name: cuda
    disabled: false
    buildsystem: simple
    only-arches:
      - x86_64
      - aarch64
    cleanup:
      - "*"
    build-options:
      build-args:
        - --filesystem=/home/runner/work/Sunshine/Sunshine/build/.flatpak-builder/downloads
      arch:
        x86_64:
          env:
            FOLDER: 905e9b9516900839fb76064719db752439f38b8cb730b49335d8bd53ddfad392
        aarch64:
          env:
            FOLDER: cd13e9c65d4c8f895a968706f46064d536be09f9706bce081cc864b7e4fa4544
    build-commands:
      # Remove CUDA installer from host
      - rm -r /home/runner/work/Sunshine/Sunshine/build/.flatpak-builder/downloads/${FOLDER}
      - chmod u+x ./cuda.run
      - ./cuda.run --silent --toolkit --toolkitpath=$FLATPAK_DEST/cuda --no-opengl-libs --no-man-page --no-drm
        --tmpdir=$FLATPAK_BUILDER_BUILDDIR
      - rm -r $FLATPAK_DEST/cuda/nsight-systems-*
      - rm ./cuda.run
    sources:
      - type: file
        only-arches:
          - x86_64
        url: https://developer.download.nvidia.com/compute/cuda/12.0.0/local_installers/cuda_12.0.0_525.60.13_linux.run
        sha256: 905e9b9516900839fb76064719db752439f38b8cb730b49335d8bd53ddfad392
        dest-filename: cuda.run
      - type: file
        only-arches:
          - aarch64
        url: https://developer.download.nvidia.com/compute/cuda/12.0.0/local_installers/cuda_12.0.0_525.60.13_linux_sbsa.run  # yamllint disable-line rule:line-length
        sha256: cd13e9c65d4c8f895a968706f46064d536be09f9706bce081cc864b7e4fa4544
        dest-filename: cuda.run

  - name: sunshine
    buildsystem: cmake
    builddir: true
    build-options:
      append-path: /usr/lib/sdk/node18/bin
      cxxflags: -I${C_INCLUDE_PATH}/libevdev-1.0
    config-opts:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/app
      - -DCMAKE_CUDA_COMPILER=/app/cuda/bin/nvcc
      - -DSUNSHINE_ASSETS_DIR=share/sunshine
      - -DSUNSHINE_EXECUTABLE_PATH=/app/bin/sunshine
      - -DSUNSHINE_ENABLE_WAYLAND=ON
      - -DSUNSHINE_ENABLE_X11=ON
      - -DSUNSHINE_ENABLE_DRM=ON
      - -DSUNSHINE_ENABLE_CUDA=ON
      - -DSUNSHINE_CONFIGURE_FLATPAK=ON
    sources:
      - npm-generated-sources.json
      - type: git
        url: "@GITHUB_CLONE_URL@"
        branch: "@GITHUB_BRANCH@"
        commit: "@GITHUB_COMMIT@"
      - type: shell
        commands:
          # Install npm dependencies
          - npm install --offline --cache=flatpak-node/npm-cache
    post-install:
      # use `sed` to update apps.json with prefixes required for flatpak
      # -r (regex)
      # -z (handle new lines) https://linuxhint.com/sed-replace-newline-with-space
      # `/gm` global and multiline
      - sed -r -z -i -e
        's/("((do)|(undo)|(cmd)|(detached))"\s*:\s*\[?\n*\s*")(.*")/\1flatpak-spawn --host \7/gm'
        /app/share/sunshine/apps.json
      - sed -i
        's%/app/bin/sunshine%flatpak run dev.lizardbyte.sunshine\nExecStop=flatpak kill dev.lizardbyte.sunshine%g'
        /app/share/sunshine/systemd/user/sunshine.service
      - install -D $FLATPAK_BUILDER_BUILDDIR/packaging/linux/flatpak/scripts/* /app/bin
