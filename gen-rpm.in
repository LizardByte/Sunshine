#!/bin/sh

# Export filepaths
export BUILDDIR=@CMAKE_CURRENT_BINARY_DIR@
export BUILDROOT=@CMAKE_CURRENT_BINARY_DIR@/rpmbuild/
export RPMSRC=@CMAKE_CURRENT_BINARY_DIR@/rpmbuild/SOURCES
export RPMSPEC=@CMAKE_CURRENT_BINARY_DIR@/rpmbuild/SPECS
export RPMBUILD=@CMAKE_CURRENT_BINARY_DIR@/rpmbuild/BUILD

# Create rpmbuild folder structure
mkdir rpmbuild
mkdir rpmbuild/BUILD
mkdir rpmbuild/BUILDROOT
mkdir rpmbuild/RPMS
mkdir rpmbuild/SOURCES
mkdir rpmbuild/SPECS
mkdir rpmbuild/SRPMS
mkdir rpmbuild/sunshine_@PROJECT_VERSION@

# Create sunshine .spec file with preinstall and postinstall scripts
cat << 'EOF' > $RPMSPEC/sunshine.spec
Name:           sunshine
Version:        @PROJECT_VERSION@
Release:        master
Summary:        An NVIDIA Gamestream-Compatible Server
BuildArch:      x86_64
BuildRoot:      @CMAKE_CURRENT_BINARY_DIR@/rpmbuild/
Source0:        sunshine_0.13.0.tar.gz

License:        GNU GPLv3
URL:            https://github.com/SunshineStream/Sunshine

Requires:       systemd

%description
An NVIDIA Gamestream-Compatible Server for streaming video games over the local network of over the internets!

%prep
%setup -q

%pre
#!/bin/sh

# Sunshine Pre-Install Script
# Store backup for old config files to prevent it from being overwritten
if [ -f /etc/sunshine/sunshine.conf ]; then
        cp /etc/sunshine/sunshine.conf /etc/sunshine/sunshine.conf.old
fi

if [ -f /etc/sunshine/apps_linux.json ]; then
        cp /etc/sunshine/apps_linux.json /etc/sunshine/apps_linux.json.old
fi

%post
#!/bin/sh

# Sunshine Post-Install Script
export GROUP_INPUT=input

if [ -f /etc/group ]; then
        if ! grep -q $GROUP_INPUT /etc/group; then
                echo "Creating group $GROUP_INPUT"

                groupadd $GROUP_INPUT
        fi
else
        echo "Warning: /etc/group not found"
fi

if [ -f /etc/sunshine/sunshine.conf.old ]; then
	echo "Restoring old sunshine.conf"
	mv /etc/sunshine/sunshine.conf.old /etc/sunshine/sunshine.conf
fi

if [ -f /etc/sunshine/apps_linux.json.old ]; then
	echo "Restoring old apps_linux.json"
	mv /etc/sunshine/apps_linux.json.old /etc/sunshine/apps_linux.json
fi

# Update permissions on config files for Web Manager
if [ -f /etc/sunshine/apps_linux.json ]; then
	echo "chmod 666 /etc/sunshine/apps_linux.json"
	chmod 666 /etc/sunshine/apps_linux.json
fi

if [ -f /etc/sunshine/sunshine.conf ]; then
	echo "chmod 666 /etc/sunshine/sunshine.conf"
	chmod 666 /etc/sunshine/sunshine.conf
fi

# Ensure Sunshine can grab images from KMS
path_to_setcap=$(which setcap)
if [ -x "$path_to_setcap" ] ; then
  echo "$path_to_setcap cap_sys_admin+p /usr/bin/sunshine"
	$path_to_setcap cap_sys_admin+p /usr/bin/sunshine
fi

%install
install -m 755 sunshine %{buildroot}/usr/bin/sunshine

%files
%{_bindir}/sunshine

%changelog
* Sat Mar 12 2022 h <65380846+thatsysadmin@users.noreply.github.com>
- Initial packaging of Sunshine.
EOF

# Copy over sunshine binary and supplemental files into rpmbuild/BUILD/
cp @CMAKE_CURRENT_BINARY_DIR@/sunshine-@PROJECT_VERSION@ $RPMBUILD/sunshine_@PROJECT_VERSION@/sunshine
cp @CMAKE_CURRENT_BINARY_DIR@/sunshine.service $RPMBUILD/sunshine.service
cp @CMAKE_CURRENT_SOURCE_DIR@/assets/sunshine.conf $RPMBUILD/sunshine.conf

# Compress Source
tar -zcvf rpmbuild/SOURCES/sunshine_0.13.0.tar.gz /home/h/Desktop/Sunshine

# Set permissions
chmod 755 sunshine
chmod 666 $RPMBUILD/sunshine.conf

# Use rpmbuild to build the RPM package.
rpmbuild -bb $RPMSPEC/sunshine.spec

# Done.